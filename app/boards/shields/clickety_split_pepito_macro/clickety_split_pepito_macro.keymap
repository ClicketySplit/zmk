/*
 * Copyright (c) 2023 The ZMK Contributors
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>


// Short versions
#define BT0         BT_SEL 0
#define BT1         BT_SEL 1
#define BT2         BT_SEL 2
#define BT3         BT_SEL 3
#define BT4         BT_SEL 4

#define BOOTLDR     &bootloader

#define VOLUP   C_VOL_UP
#define VOLDN   C_VOL_DN
#define VOLMT   C_MUTE

/*
 * Assign the cs-gpios pin to 7.
 * Uncomment these next few lines if implementing nice!view Displays
 */
//nice_view_spi: &spi0 {
//  cs-gpios = <&xiao_d 7 GPIO_ACTIVE_HIGH>;
//};


/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            layers = <0>;
            bindings = <&kp ESC>;
        };
    };

    macros {
        enDSH_W: en_Dash {
            label = "enDSH_W";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N5 &kp KP_N0>
                , <&macro_release &kp LALT>
                ;
        };

        emDSH_W: em_Dash {
            label = "emDSH_W";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N5 &kp KP_N1>
                , <&macro_release &kp LALT>
                ;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = " QWERTY";
            bindings = <
&kp ESC     &kp HOME    &kp UP      &kp END     &kp PG_UP
&kp CAPS    &kp LEFT    &kp DOWN    &kp RIGHT   &kp PG_DN
                        &kp LG(L)   &kp LGUI    &lt 1 RET   &lt 2 SPACE
            >;

//            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        lower_layer {
            label = " Lower";
            bindings = <
&kp F1      &kp F2      &kp F3      &kp F4      &kp F5
&kp F6      &kp F7      &kp F8      &kp F9      &kp F10
                        &kp F11     &kp F12     &trans      &trans
            >;

//            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        raise_layer {
            label = " Raise";
            bindings = <
&kp TAB     &enDSH_W    &emDSH_W    &kp VOLMT   &kp VOLUP
&kp CAPS    &kp LC(X)   &kp LC(C)   &kp LC(V)   &kp VOLDN
                        &kp N9      &kp N0      &trans      &trans
            >;

//            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        adjust_layer {
            label = " Adjust";
            bindings = <
&bt BT0     &bt BT1     &bt BT2     &bt BT3     &bt BT4
BOOTLDR     &sys_reset  &none       &none       &none
                        &none       &none       &trans      &trans
            >;

//            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };
    };
};